const axios = require("axios");
const fs = require("fs");
const path = require("path");

module.exports.config = {
    name: "mp3",
    version: "1.0.0",
    hasPermission: 0,
    credits: "vh",
    description: "T√¨m ki·∫øm v√† t·∫£i nh·∫°c t·ª´ ZingMP3",
    commandCategory: "Ti·ªán √≠ch",
    usages: "[T√™n b√†i h√°t]",
    cooldowns: 5,
};

module.exports.run = async function ({ api, event, args }) {
    const apiUrl = "https://regular-mastiff-cheerful.ngrok-free.app/api/search-song";
    const songName = args.join(" ");

    if (!songName) {
        return api.sendMessage("Vui l√≤ng nh·∫≠p t√™n b√†i h√°t c·∫ßn t√¨m ki·∫øm.", event.threadID, event.messageID);
    }

    try {
        // G·ª≠i y√™u c·∫ßu t√¨m ki·∫øm b√†i h√°t
        const response = await axios.get(`${apiUrl}?name=${encodeURIComponent(songName)}`);

        if (response.data && response.data.name) {
            const song = response.data;

            // L·∫•y link t·∫£i nh·∫°c
            const downloadUrl = song.streamingLinks["128"]; // S·ª≠ d·ª•ng link 128kbps
            if (!downloadUrl) {
                return api.sendMessage("Kh√¥ng th·ªÉ t·∫£i b√†i h√°t. Vui l√≤ng th·ª≠ b√†i h√°t kh√°c.", event.threadID, event.messageID);
            }

            // T·∫£i b√†i h√°t v·ªÅ
            const filePath = path.join(__dirname, `${song.name.replace(/[^a-zA-Z0-9]/g, "_")}.mp3`);
            const writer = fs.createWriteStream(filePath);
            const responseStream = await axios({
                url: downloadUrl,
                method: "GET",
                responseType: "stream",
            });

            responseStream.data.pipe(writer);

            writer.on("finish", () => {
                // G·ª≠i b√†i h√°t d∆∞·ªõi d·∫°ng file ƒë√≠nh k√®m k√®m theo t√™n b√†i h√°t
                api.sendMessage(
                    {
                        body: `üé∂ ƒêang g·ª≠i b√†i h√°t:\n\nT√™n: ${song.name}\nCa sƒ©: ${song.artist}\n\n\nlyrics: ${song.lyrics}`,
                        attachment: fs.createReadStream(filePath),
                    },
                    event.threadID,
                    () => {
                        // X√≥a file sau khi g·ª≠i xong
                        fs.unlinkSync(filePath);
                    },
                    event.messageID
                );
            });

            writer.on("error", (err) => {
                console.error("L·ªói khi t·∫£i b√†i h√°t:", err.message);
                return api.sendMessage("ƒê√£ x·∫£y ra l·ªói khi t·∫£i b√†i h√°t. Vui l√≤ng th·ª≠ l·∫°i sau.", event.threadID, event.messageID);
            });
        } else {
            return api.sendMessage("Kh√¥ng t√¨m th·∫•y b√†i h√°t n√†o v·ªõi t·ª´ kh√≥a ƒë√£ nh·∫≠p.", event.threadID, event.messageID);
        }
    } catch (error) {
        console.error("L·ªói khi g·ªçi API ho·∫∑c x·ª≠ l√Ω d·ªØ li·ªáu:", error.message);

        // G·ª≠i tin nh·∫Øn l·ªói chung cho ng∆∞·ªùi d√πng
        return api.sendMessage(
            "ƒê√£ x·∫£y ra l·ªói trong qu√° tr√¨nh x·ª≠ l√Ω. Vui l√≤ng th·ª≠ l·∫°i sau.",
            event.threadID,
            event.messageID
        );
    }
};